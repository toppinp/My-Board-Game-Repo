// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBoardGameRepo.Models;

namespace MyBoardGameRepo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201208201957_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MyBoardGameRepo.Models.BoardGames.BoardGame", b =>
                {
                    b.Property<int>("BoardGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AllowedAge")
                        .HasColumnType("int");

                    b.Property<bool>("CheckedOut")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberOfPlayers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("BoardGameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("BoardGames");

                    b.HasData(
                        new
                        {
                            BoardGameId = 1,
                            AllowedAge = 14,
                            CheckedOut = false,
                            CompanyName = "Buffalo Games",
                            Description = "The laugh out loud pretend to know your friends game.",
                            Genre = "Party Games",
                            Name = "Truth Be Told",
                            NumberOfPlayers = "3 - 8 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 2,
                            AllowedAge = 10,
                            CheckedOut = false,
                            CompanyName = "Play Monster",
                            Description = "Just spit it out!",
                            Genre = "Party Games",
                            Name = "5 Second Rule",
                            NumberOfPlayers = "3 or More Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 3,
                            AllowedAge = 14,
                            CheckedOut = false,
                            CompanyName = "Big Potato Games",
                            Description = "Blend in, don't get caught!",
                            Genre = "Party Games",
                            Name = "The Chameleon",
                            NumberOfPlayers = "3 - 8 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 4,
                            AllowedAge = 12,
                            CheckedOut = false,
                            CompanyName = "Parker Brothers",
                            Description = "The crowd pleasing, fast thinking categories game.",
                            Genre = "Party Games",
                            Name = "Scattegories",
                            NumberOfPlayers = "2 - 6 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 5,
                            AllowedAge = 17,
                            CheckedOut = false,
                            CompanyName = "Cards Against Humanity",
                            Description = "A party game for horrible people.",
                            Genre = "Party Games",
                            Name = "Cards Against Humanity",
                            NumberOfPlayers = "4 - 20 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 6,
                            AllowedAge = 12,
                            CheckedOut = false,
                            CompanyName = "Chronicle Books",
                            Description = "Who can you trust when everyone tastes the same?",
                            Genre = "Challenge",
                            Name = "Donner Dinner Party",
                            NumberOfPlayers = "4 - 10 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 7,
                            AllowedAge = 5,
                            CheckedOut = false,
                            CompanyName = "Catan Studio",
                            Description = "Trade, Build, Settle.",
                            Genre = "Strategy",
                            Name = "Catan",
                            NumberOfPlayers = "3 - 4 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 8,
                            AllowedAge = 7,
                            CheckedOut = false,
                            CompanyName = "Plaid Hat Games",
                            Description = "Adventure Awaits!",
                            Genre = "Role Playing",
                            Name = "Mice & Mystics",
                            NumberOfPlayers = "1 - 4 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 9,
                            AllowedAge = 16,
                            CheckedOut = false,
                            CompanyName = "Hasbro Gaming",
                            Description = "The best trivia from 2000 to today.",
                            Genre = "Trivia",
                            Name = "Trivial Pursuit 2000s",
                            NumberOfPlayers = "2 - 6 Players",
                            PlayerId = 1
                        },
                        new
                        {
                            BoardGameId = 10,
                            AllowedAge = 3,
                            CheckedOut = false,
                            CompanyName = "Hasbro Gaming",
                            Description = "The classic game of sweet adventures.",
                            Genre = "Family",
                            Name = "Candy Land",
                            NumberOfPlayers = "2 - 4 Players",
                            PlayerId = 1
                        });
                });

            modelBuilder.Entity("MyBoardGameRepo.Models.Players.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Age = 0
                        },
                        new
                        {
                            PlayerId = 2,
                            Age = 40,
                            Name = "Patrick Toppin"
                        },
                        new
                        {
                            PlayerId = 3,
                            Age = 7,
                            Name = "Lil Kid"
                        },
                        new
                        {
                            PlayerId = 4,
                            Age = 16,
                            Name = "Teenager Kid"
                        });
                });

            modelBuilder.Entity("MyBoardGameRepo.Models.BoardGames.BoardGame", b =>
                {
                    b.HasOne("MyBoardGameRepo.Models.Players.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
